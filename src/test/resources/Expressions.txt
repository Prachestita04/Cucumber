Two types of regular expression in cucumber:

1. Regular expression - [0-9]+ , (\\d+)
2. Cucumber expression - {string} , {int}

Rules:
1. Step def file will be generating cucumber expression by default
2. But you can use regular expression also in step def file
3. You can mix both regular and cucumber expression in step def file
4. But you can't mix both expression in a step def method

{string} -- cucumber expression

Regular expression:
([0-9])  -> capture group  --> 0 to 9 digits appear

Quantifiers in reg expression: * + ? {n}
Define -> How many times a character needs to be occurred
([0-9]+) -> 0 to 9 digits appear (atleast once or more) -> 1,22,333,33,44552233
([0-9]{4}) -> 0000, 9999, 1212, 3456, 8887
([0-9]*) -> Zero or more , int s;
([0-9]?) -> zero or once , 1,2,3,4,0, int s;

\d -> numeric digits
(\d+)
\d+

https://www.regular-expressions.info/refshorthand.html
https://www.oreilly.com/library/view/java-9-regular/9781787288706/b2204162-8d21-4466-b4d7-7b314167475b.xhtml


digit - d
\d = single digit, 1,2,0,5
\d+ = once or more, 1, 22, 444, 9102
\d* = zero or more, int s, 3, 234,23423,0
\d? = zero or once, int s , 1,2,3
\d{2} = 12, 23, 34

***************************
word - w
1. a-z
2. A-z
3. 0-9
4. Underscore _

\w = single word character, a, b, t, q
\w+ = once or more, a, g, go, ten, nest
\w* = zero or more, String s ="", a,g,go,ten,nest
\w? = zero or once, String s = "", a, h, v
\w{2} = go, hi, wt,gh

\W = anything apart from single word character - $, # ,'
\W+ = anything apart from onc or more, ##, $, @@@@
\W* = anything apart from zero or more,"",","\""
\W? = anything apart from zero or once, "", , ,#
\W{2} = ##, $$, @@

"([^\"]+)"

([^0-9]+)
caret
https://regex101.com/

(\d) = ([0-9])
(\d+) = ([0-9]+)
(\d*) = ([0-9]*)
(\d{2}) = ([0-9]{2})
(\d?) = ([0-9]?)